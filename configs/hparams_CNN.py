## The cuurent hyper-parameters values are not necessarily the best ones for a specific risk.
def get_hparams_class(dataset_name):
    """Return the algorithm class with the given name."""
    if dataset_name not in globals():
        raise NotImplementedError("Dataset not found: {}".format(dataset_name))
    return globals()[dataset_name]


class EEG():
    def __init__(self):
        super(EEG, self).__init__()
        self.train_params = {
            'num_epochs': 20,  # 20, #4,
            'num_epochs_pr': 20,  # 20,
            'weight_decay': 1e-4,

        }
        self.alg_hparams = {'DANCE': {'batch_size': 64,
           'eta': 0.05,
           'learning_rate': 0.0001,
           'margin': 0.55,
           'num_epochs': 20,
           'num_epochs_pr': 20,
           'weight_decay': 0.0001},
 'OVANet': {'batch_size': 64,
            'learning_rate': 0.0005,
            'num_epochs': 20,
            'num_epochs_pr': 20,
            'weight_decay': 0.0001},
 'PPOT': {'alpha': 0.01,
          'batch_size': 32,
          'beta': 0.001,
          'learning_rate': 0.01,
          'n_entropy': 0.1,
          'neg': 0.4,
          'num_epochs': 20,
          'num_epochs_pr': 20,
          'ot': 0.4,
          'p_entropy': 0.6000000000000001,
          'reg': 0.1,
          'tau': 0.35000000000000003,
          'tau1': 0.6000000000000001,
          'tau2': 1.6,
          'thresh': 1,
          'weight_decay': 0.0001},
 'UDA': {'batch_size': 64,
         'domain_loss_wt': 1,
         'learning_rate': 0.0001,
         'num_epochs': 20,
         'num_epochs_pr': 20,
         'src_cls_loss_wt': 3.95,
         'w0': 0.95,
         'weight_decay': 0.0001},
 'UniJDOT': {'K': 5,
             'alpha': 4.05,
             'batch_size': 64,
             'joint_decision': True,
             'lamb': 1.65,
             'learning_rate': 0.0005,
             'n_batch': 10,
             'num_epochs': 20,
             'num_epochs_pr': 20,
             'src_weight': 3.8,
             'threshold_method': 'threshold_yen',
             'trg_mem_size': 32,
             'weight_decay': 0.0001},
 'UniOT': {'K': 15,
           'MQ_size': 1000,
           'batch_size': 32,
           'gamma': 0.9000000000000001,
           'lam': 1.6,
           'learning_rate': 0.0001,
           'mu': 1,
           'num_epochs': 20,
           'num_epochs_pr': 20,
           'temp': 0.05,
           'weight_decay': 0.0001}}


class HHAR():
    def __init__(self):
        super().__init__()
        self.train_params = {
            'num_epochs': 20,  # 4, #50,#160, #50,#160, #250,
            'num_epochs_pr': 20,
            'weight_decay': 1e-4,
        }
        self.alg_hparams = {'DANCE': {'batch_size': 64,
           'eta': 1.3,
           'learning_rate': 0.0001,
           'margin': 0.7000000000000001,
           'num_epochs': 20,
           'num_epochs_pr': 20,
           'weight_decay': 0.0001},
 'OVANet': {'batch_size': 64,
            'learning_rate': 0.5,
            'num_epochs': 20,
            'num_epochs_pr': 20,
            'weight_decay': 0.0001},
 'PPOT': {'alpha': 0.001,
          'batch_size': 64,
          'beta': 0.001,
          'learning_rate': 0.1,
          'n_entropy': 1.2000000000000002,
          'neg': 0.5,
          'num_epochs': 20,
          'num_epochs_pr': 20,
          'ot': 2.8,
          'p_entropy': 0.15000000000000002,
          'reg': 0.1,
          'tau': 0.7000000000000001,
          'tau1': 0.4,
          'tau2': 1.55,
          'thresh': 1,
          'weight_decay': 0.0001},
 'UDA': {'batch_size': 32,
         'domain_loss_wt': 3.25,
         'learning_rate': 0.0001,
         'num_epochs': 20,
         'num_epochs_pr': 20,
         'src_cls_loss_wt': 4.75,
         'w0': 0.95,
         'weight_decay': 0.0001},
 'UniJDOT': {'K': 10,
             'alpha': 2.95,
             'batch_size': 32,
             'joint_decision': True,
             'lamb': 4.6,
             'learning_rate': 0.0001,
             'n_batch': 10,
             'num_epochs': 20,
             'num_epochs_pr': 20,
             'src_weight': 0.1,
             'threshold_method': 'threshold_yen',
             'trg_mem_size': 32,
             'weight_decay': 0.0001},
 'UniOT': {'K': 5,
           'MQ_size': 2000,
           'batch_size': 32,
           'gamma': 0.5,
           'lam': 0.2,
           'learning_rate': 0.0001,
           'mu': 0.6000000000000001,
           'num_epochs': 20,
           'num_epochs_pr': 20,
           'temp': 0.1,
           'weight_decay': 0.0001}}


class HAR():
    def __init__(self):
        super(HAR, self).__init__()
        self.train_params = {
            'num_epochs': 20,  # 4, #50,#160, #50,#160, #250,
            'num_epochs_pr': 20,
            # 64*2*2,
            'weight_decay': 1e-4,
        }
        self.alg_hparams = {
    'DANCE': {'batch_size': 64,
           'eta': 4.5,
           'learning_rate': 0.0005,
           'margin': 0.1,
           'num_epochs': 20,
           'num_epochs_pr': 20,
           'weight_decay': 0.0001},
 'OVANet': {'batch_size': 64,
            'learning_rate': 0.1,
            'num_epochs': 20,
            'num_epochs_pr': 20,
            'weight_decay': 0.0001},
 'PPOT_save': {'alpha': 0.001,
          'batch_size': 64,
          'beta': 0.001,
          'learning_rate': 0.01,
          'n_entropy': 1.05,
          'neg': 0.3,
          'num_epochs': 20,
          'num_epochs_pr': 20,
          'ot': 4.2,
          'p_entropy': 0.1,
          'reg': 0.1,
          'tau': 0.9000000000000001,
          'tau1': 0.8500000000000001,
          'tau2': 0.95,
          'thresh': 0.95,
          'weight_decay': 0.0001},
'PPOT': {'alpha': 0.001,
         'batch_size': 32,
         'beta': 0.01,
         'learning_rate': 0.1,
         'n_entropy': 0.05,
         'neg': 0.2,
         'num_epochs': 20,
         'num_epochs_pr': 20,
         'ot': 3.95,
         'p_entropy': 0.15000000000000002,
         'reg': 0.1,
         'tau': 0.8,
         'tau1': 0.8500000000000001,
         'tau2': 1.05,
         'thresh': 1,
         'weight_decay': 0.0001},
 'UDA': {'batch_size': 32,
         'domain_loss_wt': 3.9,
         'learning_rate': 0.0001,
         'num_epochs': 20,
         'num_epochs_pr': 20,
         'src_cls_loss_wt': 4.05,
         'w0': 0.8,
         'weight_decay': 0.0001},
 'UniJDOT': {'K': 15,
             'alpha': 2.8,
             'batch_size': 64,
             'joint_decision': True,
             'lamb': 1.35,
             'learning_rate': 0.0005,
             'n_batch': 10,
             'num_epochs': 20,
             'num_epochs_pr': 20,
             'src_weight': 0.1,
             'threshold_method': 'threshold_yen',
             'trg_mem_size': 32,
             'weight_decay': 0.0001},
 'UniOT': {'K': 15,
           'MQ_size': 2000,
           'batch_size': 32,
           'gamma': 0.6500000000000001,
           'lam': 0.25,
           'learning_rate': 0.0001,
           'mu': 0.5,
           'num_epochs': 20,
           'num_epochs_pr': 20,
           'temp': 0.1,
           'weight_decay': 0.0001}}
